#!/usr/bin/env python3

from pwn import *
import base64
import os
import sys
import tqdm

s   = lambda b: io.send(b)
sa  = lambda a,b: io.sendafter(a,b)
sl  = lambda b: io.sendline(b)
sla = lambda a,b: io.sendlineafter(a,b)
r   = lambda : io.recv()
ru  = lambda b:io.recvuntil(b)
rl  = lambda : io.recvline()
pu32= lambda b : u32(b.ljust(4,b"\0"))
pu64= lambda b : u64(b.ljust(8,b"\0"))
shell = lambda : io.interactive()
cmd = lambda x : sla("$",str(x))

expdir = os.getcwd()
if len(sys.argv) <= 1:
    print("Usage: python3 exploit-sender [exploit]")
    exit()
if len(sys.argv) > 1:
    chall = os.path.join(expdir,sys.argv[1])

if not os.path.exists(chall):
    print("File not found")
    exit()

instance = input("nc: ")
HOST = "127.0.0.1"
PORT = 9999

if len(instance) == 0:
    pass
elif "nc" not in instance:
    HOST = instance.split(" ")[0]
    PORT = int(instance.split(" ")[1])
else:
    HOST = instance.split(" ")[1]
    PORT = int(instance.split(" ")[2])

with open(chall, "rb") as f:
    content = f.read()
    encoded = base64.b64encode(content).decode()

io = remote(HOST, PORT)

cmd("cd /tmp")
log.progress("Sending exploit")
for i in tqdm.tqdm(range(0, len(encoded), 256)):
    cmd(f"echo {encoded[i:i+256]} >> exploit.b64")

cmd("base64 -d exploit.b64 > exploit")
cmd("chmod +x exploit")
cmd("rm exploit.b64")

shell()

